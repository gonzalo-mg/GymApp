{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExerciseDetailPage/index.js\",\n  _s = $RefreshSig$();\n/* VISTA de detalle de exercise recupeardo por :id */\n\nimport \"./index.css\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { getExerciseById } from \"../../services/exercises\";\nimport { useState, useEffect } from \"react\";\nimport { useExerciseNavigation } from \"../../hooks/useNavigation\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExerciseDetailPage = () => {\n  _s();\n  // recuperar del param el id del exercise\n  const {\n    idExercise: id\n  } = useParams();\n\n  // f estado de \"exercise\"; para setear que exercise se muestra\n  const [exercise, setExercise] = useState([]);\n\n  // efecto obtener \"exercise\" del servidor\n  // // funcion: getData; llamar al fetch y actualizar estado de \"exercise\"\n  // // variables de escucha: [id]; cada vez q cambie el exercise\n  useEffect(() => {\n    const getData = async () => {\n      const currentExercise = await getExerciseById(id);\n      setExercise(currentExercise);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre ejercicios\n  const {\n    toExercisesPage\n  } = useExerciseNavigation();\n\n  // devolver banner, tarjeta del ejercicio y boton de volver; si no existe el ejercicio lanzar alerta y volver a lista de ejercicios\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"ExerciseDetail\",\n    children: [/*#__PURE__*/_jsxDEV(TextBanner, {\n      text: \"Vista de Detalles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !exercise ? toExercisesPage() : undefined, /*#__PURE__*/_jsxDEV(ExerciseCard, {\n      name: exercise.name,\n      description: exercise.description,\n      typology: exercise.typology,\n      muscles: exercise.muscles,\n      picture: exercise.picture,\n      admin: false,\n      likeCounter: \"WIP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n      type: \"button\",\n      text: \"Volver\",\n      onClickFunction: () => toExercisesPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseDetailPage, \"f5T0lX2WhJBGy93xY01MuUWx93M=\", false, function () {\n  return [useParams, useExerciseNavigation];\n});\n_c = ExerciseDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ExerciseDetailPage\");","map":{"version":3,"names":["ExerciseCard","ButtonGeneric","TextBanner","getExerciseById","useState","useEffect","useExerciseNavigation","useParams","ExerciseDetailPage","idExercise","id","exercise","setExercise","getData","currentExercise","toExercisesPage","undefined","name","description","typology","muscles","picture"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExerciseDetailPage/index.js"],"sourcesContent":["/* VISTA de detalle de exercise recupeardo por :id */\n\nimport \"./index.css\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\n\nimport { getExerciseById } from \"../../services/exercises\";\nimport { useState, useEffect } from \"react\";\nimport { useExerciseNavigation } from \"../../hooks/useNavigation\";\nimport { useParams } from \"react-router-dom\";\n\nexport const ExerciseDetailPage = () => {\n  // recuperar del param el id del exercise\n  const { idExercise: id } = useParams();\n\n  // f estado de \"exercise\"; para setear que exercise se muestra\n  const [exercise, setExercise] = useState([]);\n\n  // efecto obtener \"exercise\" del servidor\n  // // funcion: getData; llamar al fetch y actualizar estado de \"exercise\"\n  // // variables de escucha: [id]; cada vez q cambie el exercise\n  useEffect(() => {\n    const getData = async () => {\n      const currentExercise = await getExerciseById(id);\n      setExercise(currentExercise);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre ejercicios\n  const { toExercisesPage } = useExerciseNavigation();\n\n  // devolver banner, tarjeta del ejercicio y boton de volver; si no existe el ejercicio lanzar alerta y volver a lista de ejercicios\n\n  return (\n    <article className=\"ExerciseDetail\">\n      <TextBanner text={\"Vista de Detalles\"}></TextBanner>\n\n      {!exercise ? toExercisesPage() : undefined}\n\n      <ExerciseCard\n        name={exercise.name}\n        description={exercise.description}\n        typology={exercise.typology}\n        muscles={exercise.muscles}\n        picture={exercise.picture}\n        admin={false}\n        likeCounter={\"WIP\"}\n      ></ExerciseCard>\n\n      <ButtonGeneric\n        type=\"button\"\n        text=\"Volver\"\n        onClickFunction={() => toExercisesPage()}\n      ></ButtonGeneric>\n    </article>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAO,aAAa;AACpB,SAASA,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,UAAU,QAAQ,6BAA6B;AAExD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EACtC;EACA,MAAM;IAAEC,UAAU,EAAEC;EAAG,CAAC,GAAGH,SAAS,EAAE;;EAEtC;EACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAG,YAAY;MAC1B,MAAMC,eAAe,GAAG,MAAMX,eAAe,CAACO,EAAE,CAAC;MACjDE,WAAW,CAACE,eAAe,CAAC;IAC9B,CAAC;IACDD,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEE;EAAgB,CAAC,GAAGT,qBAAqB,EAAE;;EAEnD;;EAEA,oBACE;IAAS,SAAS,EAAC,gBAAgB;IAAA,wBACjC,QAAC,UAAU;MAAC,IAAI,EAAE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAc,EAEnD,CAACK,QAAQ,GAAGI,eAAe,EAAE,GAAGC,SAAS,eAE1C,QAAC,YAAY;MACX,IAAI,EAAEL,QAAQ,CAACM,IAAK;MACpB,WAAW,EAAEN,QAAQ,CAACO,WAAY;MAClC,QAAQ,EAAEP,QAAQ,CAACQ,QAAS;MAC5B,OAAO,EAAER,QAAQ,CAACS,OAAQ;MAC1B,OAAO,EAAET,QAAQ,CAACU,OAAQ;MAC1B,KAAK,EAAE,KAAM;MACb,WAAW,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QACL,eAEhB,QAAC,aAAa;MACZ,IAAI,EAAC,QAAQ;MACb,IAAI,EAAC,QAAQ;MACb,eAAe,EAAE,MAAMN,eAAe;IAAG;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEd,CAAC;AAAC,GA9CWP,kBAAkB;EAAA,QAEFD,SAAS,EAiBRD,qBAAqB;AAAA;AAAA,KAnBtCE,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}