{"ast":null,"code":"/* Funciones auxiliares para manejar los ejercicios */\n\nimport axios from \"axios\";\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\n\n/* f para recuperar todos los ejercicios del server */\nexport const getExercisesService = async token => {\n  //console.log(`getExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/exercises`, {\n      headers: {\n        Authorization: token\n      }\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: serverData\n    } = data;\n    const {\n      exercises\n    } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar un ejercicio particular del server mediante path param */\nexport const getExerciseByIdService = async _ref => {\n  let {\n    id,\n    token\n  } = _ref;\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: exercise\n    } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar los ejercicios favs de un usuario del server */\nexport const getFavExercisesService = async token => {\n  //console.log(`getFavExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/favorites`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    console.log(`getFavExercisesService - response: ${response}`);\n    const {\n      data\n    } = response;\n    const {\n      data: favsArray\n    } = data;\n    // favsArray es un array con objetos tipo fav:\n    /*     {\n      \"idUser\": 3,\n      \"idExercise\": 3,\n      \"stateFav\": 1,\n      \"created\": \"2023-03-01T21:56:16.000Z\"\n    } */\n    console.log(\"favsArray\");\n    console.log(favsArray);\n    //console.log(\"favsArray[0]\");\n    //console.log(favsArray[0])\n    //console.log(\"favsArray[0].idExercise\")\n    //console.log(favsArray[0].idExercise)\n    favsArray.map(f => console.log(\"f.idExercise\"));\n    favsArray.map(f => console.log(f.idExercise));\n    const favsExercisesIds = favsArray.map(f => {\n      return f.idExercise;\n    });\n    console.log(\"favsExercisesIds\");\n    console.log(favsExercisesIds);\n    const exercises = favsExercisesIds.map(id => {\n      return getExerciseByIdService({\n        id,\n        token\n      });\n    });\n    console.log(\"exercises\");\n    console.log(exercises);\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para grabar nuevo ejercicio en server */\nexport const postNewExerciseService = async _ref2 => {\n  let {\n    token,\n    name,\n    typology,\n    description,\n    muscles,\n    picture\n  } = _ref2;\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token\n      }\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};","map":{"version":3,"names":["axios","serverRoot","process","env","REACT_APP_BACKEND_URL","getExercisesService","token","response","get","headers","Authorization","data","serverData","exercises","e","console","error","log","alert","status","message","getExerciseByIdService","id","exercise","getFavExercisesService","favsArray","map","f","idExercise","favsExercisesIds","postNewExerciseService","name","typology","description","muscles","picture","formData","FormData","append","post"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/services/exercises.js"],"sourcesContent":["/* Funciones auxiliares para manejar los ejercicios */\n\nimport axios from \"axios\";\n\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\n\n/* f para recuperar todos los ejercicios del server */\nexport const getExercisesService = async (token) => {\n  //console.log(`getExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/exercises`, {\n      headers: { Authorization: token },\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: serverData } = data;\n    const { exercises } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar un ejercicio particular del server mediante path param */\nexport const getExerciseByIdService = async ({ id, token }) => {\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`, {\n      headers: { Authorization: token },\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: exercise } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar los ejercicios favs de un usuario del server */\nexport const getFavExercisesService = async (token) => {\n  //console.log(`getFavExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/favorites`, {\n      headers: { Authorization: token },\n    });\n    console.log(`getFavExercisesService - response: ${response}`);\n    const { data } = response;\n    const { data: favsArray } = data;\n    // favsArray es un array con objetos tipo fav:\n    /*     {\n      \"idUser\": 3,\n      \"idExercise\": 3,\n      \"stateFav\": 1,\n      \"created\": \"2023-03-01T21:56:16.000Z\"\n  } */\n    console.log(\"favsArray\");\n    console.log(favsArray);\n    //console.log(\"favsArray[0]\");\n    //console.log(favsArray[0])\n    //console.log(\"favsArray[0].idExercise\")\n    //console.log(favsArray[0].idExercise)\n    favsArray.map((f) => console.log(\"f.idExercise\"));\n    favsArray.map((f) => console.log(f.idExercise));\n\n    const favsExercisesIds = favsArray.map((f) => {\n      return f.idExercise;\n    });\n    console.log(\"favsExercisesIds\");\n    console.log(favsExercisesIds);\n\n    const exercises = favsExercisesIds.map((id) => {\n      return getExerciseByIdService({id, token})\n    })\n    console.log(\"exercises\")\n    console.log(exercises)\n\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para grabar nuevo ejercicio en server */\nexport const postNewExerciseService = async ({\n  token,\n  name,\n  typology,\n  description,\n  muscles,\n  picture,\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: token,\n      },\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}