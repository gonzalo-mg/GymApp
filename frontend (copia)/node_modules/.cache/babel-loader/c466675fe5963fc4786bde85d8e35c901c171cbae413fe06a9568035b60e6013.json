{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExercisesPage/index.js\",\n  _s = $RefreshSig$();\n/* VISTA de listado completo de ejercicios */\n\nimport \"./index.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useExerciseNavigation } from \"../../hooks/useNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { getExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExercisesPage = () => {\n  _s();\n  // cargar contexto autenticacion\n  const {\n    token\n  } = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // f estado de \"exercises\"; para setear los filtros a usar para mostrar exercises\n  const [filter, setFilter] = useState(\"\");\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises del server\n      const recoveredExercises = await getExercisesService(token);\n\n      // f para filtrar exercises; devolver cq exercise q contenga (en su nombre/tipologia/musculo) lo escrito por el usuario en el formulario\n      function myFiltering(ex, filter) {\n        if (ex.name.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.typology.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.muscles.toLowerCase().includes(filter)) {\n          return ex;\n        }\n      }\n\n      // aplicar filtrado\n      const filteredExercises = recoveredExercises.filter(ex => myFiltering(ex, filter));\n\n      // setear exercises al resultado del filtro\n      setExercises(filteredExercises);\n    };\n    getData();\n  }, [filter]);\n\n  // invocar hook de navegacion entre ejercicios\n  const {\n    toExercisesPage,\n    toExerciseDetailPage\n  } = useExerciseNavigation();\n\n  // devolver una card por cada exercise del server\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"exercisesList\",\n    children: [/*#__PURE__*/_jsxDEV(TextBanner, {\n      text: \"Vista Lista Ejercicios Disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"filters\",\n      onSubmit: e => {\n        e.preventDefault();\n        console.log(`form submit sets filtersURL to: ${filter}`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"filterName\",\n            name: \"name\",\n            placeholder: \"Busca por nombre, tipolog\\xEDa o m\\xFAsculo\",\n            value: filter,\n            onChange: e => setFilter(e.target.value.toLowerCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n        type: \"submit\",\n        text: \"Filtrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n        type: \"button\",\n        text: \"Volver\",\n        onClickFunction: () => toExercisesPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), filter !== \"\" ? /*#__PURE__*/_jsxDEV(TextBanner, {\n      text: \"Resultados del filtrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : \"\", exercises.map(ex => {\n      return /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        name: ex.name,\n        picture: ex.picture,\n        typology: ex.typology,\n        muscles: ex.muscles,\n        onClickCard: () => toExerciseDetailPage(ex.idExercise)\n      }, ex.idExercise, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisesPage, \"X273UTZ+WuMCD6ORxdBI9B7uTYI=\", false, function () {\n  return [useExerciseNavigation];\n});\n_c = ExercisesPage;\nvar _c;\n$RefreshReg$(_c, \"ExercisesPage\");","map":{"version":3,"names":["useState","useEffect","useContext","useExerciseNavigation","AuthContext","getExercisesService","ExerciseCard","ButtonGeneric","TextBanner","ExercisesPage","token","exercises","setExercises","filter","setFilter","getData","recoveredExercises","myFiltering","ex","name","toLowerCase","includes","typology","muscles","filteredExercises","toExercisesPage","toExerciseDetailPage","e","preventDefault","console","log","target","value","map","picture","idExercise"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExercisesPage/index.js"],"sourcesContent":["/* VISTA de listado completo de ejercicios */\n\nimport \"./index.css\";\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useExerciseNavigation } from \"../../hooks/useNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nimport { getExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\n\nexport const ExercisesPage = () => {\n  // cargar contexto autenticacion\n  const {token} = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // f estado de \"exercises\"; para setear los filtros a usar para mostrar exercises\n  const [filter, setFilter] = useState(\"\");\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises del server\n      const recoveredExercises = await getExercisesService(token);\n\n      // f para filtrar exercises; devolver cq exercise q contenga (en su nombre/tipologia/musculo) lo escrito por el usuario en el formulario\n      function myFiltering(ex, filter) {\n        if (ex.name.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.typology.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.muscles.toLowerCase().includes(filter)) {\n          return ex;\n        }\n      }\n\n      // aplicar filtrado\n      const filteredExercises = recoveredExercises.filter((ex) =>\n        myFiltering(ex, filter)\n      );\n\n      // setear exercises al resultado del filtro\n      setExercises(filteredExercises);\n    };\n    getData();\n  }, [filter]);\n\n  // invocar hook de navegacion entre ejercicios\n  const { toExercisesPage, toExerciseDetailPage } = useExerciseNavigation();\n\n  // devolver una card por cada exercise del server\n  return (\n    <article className=\"exercisesList\">\n      <TextBanner text={\"Vista Lista Ejercicios Disponibles\"}></TextBanner>\n\n      <form\n        id=\"filters\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          console.log(`form submit sets filtersURL to: ${filter}`);\n        }}\n      >\n        <ul>\n          <li>\n            <input\n              id=\"filterName\"\n              name=\"name\"\n              placeholder=\"Busca por nombre, tipología o músculo\"\n              value={filter}\n              onChange={(e) => setFilter(e.target.value.toLowerCase())}\n            ></input>\n          </li>\n        </ul>\n\n        <ButtonGeneric type=\"submit\" text=\"Filtrar\"></ButtonGeneric>\n\n        <ButtonGeneric\n          type=\"button\"\n          text=\"Volver\"\n          onClickFunction={() => toExercisesPage()}\n        ></ButtonGeneric>\n      </form>\n\n      {filter !== \"\" ? (\n        <TextBanner text=\"Resultados del filtrado\"></TextBanner>\n      ) : (\n        \"\"\n      )}\n\n      {exercises.map((ex) => {\n        return (\n          <ExerciseCard\n            key={ex.idExercise}\n            name={ex.name}\n            picture={ex.picture}\n            typology={ex.typology}\n            muscles={ex.muscles}\n            onClickCard={() => toExerciseDetailPage(ex.idExercise)}\n          ></ExerciseCard>\n        );\n      })}\n    </article>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAO,aAAa;AAEpB,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,WAAW,QAAQ,4BAA4B;AAExD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,UAAU,QAAQ,6BAA6B;AAAC;AAEzD,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EACjC;EACA,MAAM;IAACC;EAAK,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;;EAEvC;EACA,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAG,YAAY;MAC1B;MACA,MAAMC,kBAAkB,GAAG,MAAMX,mBAAmB,CAACK,KAAK,CAAC;;MAE3D;MACA,SAASO,WAAW,CAACC,EAAE,EAAEL,MAAM,EAAE;QAC/B,IAAIK,EAAE,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,MAAM,CAAC,EAAE;UAC1C,OAAOK,EAAE;QACX;QACA,IAAIA,EAAE,CAACI,QAAQ,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACR,MAAM,CAAC,EAAE;UAC9C,OAAOK,EAAE;QACX;QACA,IAAIA,EAAE,CAACK,OAAO,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACR,MAAM,CAAC,EAAE;UAC7C,OAAOK,EAAE;QACX;MACF;;MAEA;MACA,MAAMM,iBAAiB,GAAGR,kBAAkB,CAACH,MAAM,CAAEK,EAAE,IACrDD,WAAW,CAACC,EAAE,EAAEL,MAAM,CAAC,CACxB;;MAED;MACAD,YAAY,CAACY,iBAAiB,CAAC;IACjC,CAAC;IACDT,OAAO,EAAE;EACX,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM;IAAEY,eAAe;IAAEC;EAAqB,CAAC,GAAGvB,qBAAqB,EAAE;;EAEzE;EACA,oBACE;IAAS,SAAS,EAAC,eAAe;IAAA,wBAChC,QAAC,UAAU;MAAC,IAAI,EAAE;IAAqC;MAAA;MAAA;MAAA;IAAA,QAAc,eAErE;MACE,EAAE,EAAC,SAAS;MACZ,QAAQ,EAAGwB,CAAC,IAAK;QACfA,CAAC,CAACC,cAAc,EAAE;QAClBC,OAAO,CAACC,GAAG,CAAE,mCAAkCjB,MAAO,EAAC,CAAC;MAC1D,CAAE;MAAA,wBAEF;QAAA,uBACE;UAAA,uBACE;YACE,EAAE,EAAC,YAAY;YACf,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,6CAAuC;YACnD,KAAK,EAAEA,MAAO;YACd,QAAQ,EAAGc,CAAC,IAAKb,SAAS,CAACa,CAAC,CAACI,MAAM,CAACC,KAAK,CAACZ,WAAW,EAAE;UAAE;YAAA;YAAA;YAAA;UAAA;QAClD;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACF,eAEL,QAAC,aAAa;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAiB,eAE5D,QAAC,aAAa;QACZ,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,QAAQ;QACb,eAAe,EAAE,MAAMK,eAAe;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,EAENZ,MAAM,KAAK,EAAE,gBACZ,QAAC,UAAU;MAAC,IAAI,EAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAc,GAExD,EACD,EAEAF,SAAS,CAACsB,GAAG,CAAEf,EAAE,IAAK;MACrB,oBACE,QAAC,YAAY;QAEX,IAAI,EAAEA,EAAE,CAACC,IAAK;QACd,OAAO,EAAED,EAAE,CAACgB,OAAQ;QACpB,QAAQ,EAAEhB,EAAE,CAACI,QAAS;QACtB,OAAO,EAAEJ,EAAE,CAACK,OAAQ;QACpB,WAAW,EAAE,MAAMG,oBAAoB,CAACR,EAAE,CAACiB,UAAU;MAAE,GALlDjB,EAAE,CAACiB,UAAU;QAAA;QAAA;QAAA;MAAA,QAMJ;IAEpB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEd,CAAC;AAAC,GAlGW1B,aAAa;EAAA,QA2C0BN,qBAAqB;AAAA;AAAA,KA3C5DM,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}