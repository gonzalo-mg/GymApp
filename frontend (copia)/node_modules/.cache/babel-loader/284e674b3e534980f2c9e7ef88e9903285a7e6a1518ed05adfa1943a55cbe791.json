{"ast":null,"code":"/* Funciones auxiliares para manejar los ejercicios */\n\nimport axios from \"axios\";\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\n\n/* f para recuperar todos los ejercicios del server */\nexport const getExercisesService = async token => {\n  console.log(`getExercisesService - token: ${token}`);\n  try {\n    const response = await axios.get(`${serverRoot}/exercises`, {\n      headers: {\n        \"Authorization\": token\n      }\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: serverData\n    } = data;\n    const {\n      exercises\n    } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar un ejercicio particular del server mediante path param */\nexport const getExerciseByIdService = async _ref => {\n  let {\n    id,\n    token\n  } = _ref;\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`, {\n      headers: {\n        \"Authorization\": token\n      }\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: exercise\n    } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar los ejercicios favs de un usuario del server */\nexport const getFavExercisesService = async token => {\n  console.log(`getFavExercisesService - token: ${token}`);\n  try {\n    const response = await axios.get(`${serverRoot}/favorites`, {\n      headers: {\n        \"Authorization\": token\n      }\n    });\n    console.log(`getFavExercisesService - response: ${response}`);\n    console.log(response);\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: favsArray\n    } = data;\n    //const { exercises } = serverData;\n    //console.log(\"serverData\")\n    //console.log(serverData)\n\n    // devolver array de objetos tipo ejercicio\n    console.log(`getFavExercisesService - favsArray: ${favsArray}`);\n    return favsArray;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para grabar nuevo ejercicio en server */\nexport const postNewExerciseService = async _ref2 => {\n  let {\n    token,\n    name,\n    typology,\n    description,\n    muscles,\n    picture\n  } = _ref2;\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": token\n      }\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};","map":{"version":3,"names":["axios","serverRoot","process","env","REACT_APP_BACKEND_URL","getExercisesService","token","console","log","response","get","headers","data","serverData","exercises","e","error","alert","status","message","getExerciseByIdService","id","exercise","getFavExercisesService","favsArray","postNewExerciseService","name","typology","description","muscles","picture","formData","FormData","append","post"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/services/exercises.js"],"sourcesContent":["/* Funciones auxiliares para manejar los ejercicios */\n\nimport axios from \"axios\";\n\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\n\n/* f para recuperar todos los ejercicios del server */\nexport const getExercisesService = async (token) => {\n  console.log(`getExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/exercises`, {\n      headers: { \"Authorization\": token },\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: serverData } = data;\n    const { exercises } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar un ejercicio particular del server mediante path param */\nexport const getExerciseByIdService = async ({ id, token }) => {\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`, {\n      headers: { \"Authorization\": token },\n    });\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: exercise } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para recuperar los ejercicios favs de un usuario del server */\nexport const getFavExercisesService = async (token) => {\n  console.log(`getFavExercisesService - token: ${token}`)\n  try {\n    const response = await axios.get(`${serverRoot}/favorites`, {\n      headers: { \"Authorization\": token },\n    });\n    console.log(`getFavExercisesService - response: ${response}`)\n    console.log(response)\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: favsArray } = data;\n    //const { exercises } = serverData;\n    //console.log(\"serverData\")\n    //console.log(serverData)\n\n    // devolver array de objetos tipo ejercicio\n    console.log(`getFavExercisesService - favsArray: ${favsArray}`)\n    return favsArray;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n\n/* f para grabar nuevo ejercicio en server */\nexport const postNewExerciseService = async ({\n  token,\n  name,\n  typology,\n  description,\n  muscles,\n  picture,\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": token,\n      },\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n    return alert(`${e.response.data.status}: ${e.response.data.message}`);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}