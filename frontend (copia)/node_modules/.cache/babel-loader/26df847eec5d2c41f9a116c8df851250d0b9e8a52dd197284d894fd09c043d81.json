{"ast":null,"code":"import axios from \"axios\";\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\nexport const getExercises = async () => {\n  try {\n    console.log(`calling getExercises`);\n    const response = await axios.get(`${serverRoot}/exercises`);\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: serverData\n    } = data;\n    const {\n      exercises\n    } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n  }\n};\n\n// version con fetch\n/*   export const getExercises= async () => {\n    try {\n      const response = await fetch(`${serverRoot}/exercises`);\n\n      const parsedResponse = await response.json()\n\n      console.log(parsedResponse.data.exercises)\n\n      return parsedResponse.data.exercises;\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }; */\n\nexport const getExerciseById = async id => {\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`);\n\n    //console.log(\"getExerciseById response\");\n    //console.log(response);\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const {\n      data\n    } = response;\n    const {\n      data: exercise\n    } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n  }\n};\nexport const postNewExercise = async _ref => {\n  let {\n    name,\n    typology,\n    description,\n    muscles,\n    picture\n  } = _ref;\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n  }\n};","map":{"version":3,"names":["axios","serverRoot","process","env","REACT_APP_BACKEND_URL","getExercises","console","log","response","get","data","serverData","exercises","e","error","getExerciseById","id","exercise","postNewExercise","name","typology","description","muscles","picture","formData","FormData","append","post","headers","message"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/services/exercises.js"],"sourcesContent":["import axios from \"axios\";\n\nconst serverRoot = process.env.REACT_APP_BACKEND_URL;\n\nexport const getExercises = async () => {\n  try {\n    console.log(`calling getExercises`);\n    const response = await axios.get(`${serverRoot}/exercises`);\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: serverData } = data;\n    const { exercises } = serverData;\n\n    // devolver array de objetos tipo ejercicio\n    return exercises;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n  }\n};\n\n// version con fetch\n/*   export const getExercises= async () => {\n    try {\n      const response = await fetch(`${serverRoot}/exercises`);\n\n      const parsedResponse = await response.json()\n\n      console.log(parsedResponse.data.exercises)\n\n      return parsedResponse.data.exercises;\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }; */\n\nexport const getExerciseById = async (id) => {\n  try {\n    const response = await axios.get(`${serverRoot}/exercises/${id}`);\n\n    //console.log(\"getExerciseById response\");\n    //console.log(response);\n\n    // desestructurar respuesta ; axios incluye varias anidaciones de objetos, por defecto uno llamada \"data\"; el backend tmb devuelve un {data};\n    const { data } = response;\n    const { data: exercise } = data;\n\n    // devolver objeto tipo ejercicio\n    return exercise;\n  } catch (e) {\n    console.error(e);\n    console.log(e.response.data);\n  }\n};\n\nexport const postNewExercise = async ({\n  name,\n  typology,\n  description,\n  muscles,\n  picture,\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"typology\", typology);\n    formData.append(\"description\", description);\n    formData.append(\"muscles\", muscles);\n    formData.append(\"picture\", picture);\n\n    await axios.post(`${serverRoot}/newExercise`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(e.response.data);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAEpD,OAAO,MAAMC,YAAY,GAAG,YAAY;EACtC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAE,sBAAqB,CAAC;IACnC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,UAAW,YAAW,CAAC;;IAE3D;IACA,MAAM;MAAES;IAAK,CAAC,GAAGF,QAAQ;IACzB,MAAM;MAAEE,IAAI,EAAEC;IAAW,CAAC,GAAGD,IAAI;IACjC,MAAM;MAAEE;IAAU,CAAC,GAAGD,UAAU;;IAEhC;IACA,OAAOC,SAAS;EAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVP,OAAO,CAACQ,KAAK,CAACD,CAAC,CAAC;IAChBP,OAAO,CAACC,GAAG,CAACM,CAAC,CAACL,QAAQ,CAACE,IAAI,CAAC;EAC9B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,UAAW,cAAae,EAAG,EAAC,CAAC;;IAEjE;IACA;;IAEA;IACA,MAAM;MAAEN;IAAK,CAAC,GAAGF,QAAQ;IACzB,MAAM;MAAEE,IAAI,EAAEO;IAAS,CAAC,GAAGP,IAAI;;IAE/B;IACA,OAAOO,QAAQ;EACjB,CAAC,CAAC,OAAOJ,CAAC,EAAE;IACVP,OAAO,CAACQ,KAAK,CAACD,CAAC,CAAC;IAChBP,OAAO,CAACC,GAAG,CAACM,CAAC,CAACL,QAAQ,CAACE,IAAI,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,cAMzB;EAAA,IANgC;IACpCC,IAAI;IACJC,QAAQ;IACRC,WAAW;IACXC,OAAO;IACPC;EACF,CAAC;EACC,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IAC7BK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IACrCI,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEL,WAAW,CAAC;IAC3CG,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IACnCE,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;IAEnC,MAAMvB,KAAK,CAAC2B,IAAI,CAAE,GAAE1B,UAAW,cAAa,EAAEuB,QAAQ,EAAE;MACtDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOf,CAAC,EAAE;IACVP,OAAO,CAACQ,KAAK,CAACD,CAAC,CAACgB,OAAO,CAAC;IACxBvB,OAAO,CAACC,GAAG,CAACM,CAAC,CAACL,QAAQ,CAACE,IAAI,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}