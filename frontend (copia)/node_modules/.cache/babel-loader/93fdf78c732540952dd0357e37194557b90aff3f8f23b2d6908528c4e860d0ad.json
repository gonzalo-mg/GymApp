{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExerciseDetailPage/index.js\",\n  _s = $RefreshSig$();\n/* VISTA de detalle de exercise recupeardo por :id */\n\nimport \"./index.css\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { UserCard } from \"../../components/UserCard\";\nimport { getExerciseByIdService } from \"../../services/exercises\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ExerciseDetailPage = () => {\n  _s();\n  // recuperar contexto autenticacion\n  const {\n    token,\n    currentUser\n  } = useContext(AuthContext);\n\n  // recuperar del param el id del exercise\n  const {\n    idExercise: id\n  } = useParams();\n\n  // f estado de \"exercise\"; para setear que exercise se muestra\n  const [exercise, setExercise] = useState([]);\n\n  // efecto obtener \"exercise\" del servidor\n  // // funcion: getData; llamar al fetch y actualizar estado de \"exercise\"\n  // // variables de escucha: [id]; cada vez q cambie el exercise\n  useEffect(() => {\n    const getData = async () => {\n      const currentExercise = await getExerciseByIdService({\n        id,\n        token\n      });\n      setExercise(currentExercise);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre ejercicios\n  const {\n    toExercisesPage,\n    toAnonUserPage\n  } = useViewNavigation();\n\n  // devolver banner, tarjeta del ejercicio y boton de volver; si no existe el ejercicio lanzar alerta y volver a lista de ejercicios\n\n  return !currentUser ? toAnonUserPage() : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"ExerciseDetail\",\n      children: [/*#__PURE__*/_jsxDEV(TextBanner, {\n        text: \"Vista de Detalles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), !exercise ? toExercisesPage() : undefined, /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        name: exercise.name,\n        description: exercise.description,\n        typology: exercise.typology,\n        muscles: exercise.muscles,\n        picture: exercise.picture,\n        admin: false,\n        likeCounter: \"WIP\"\n      }, exercise.idExercise, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n        type: \"button\",\n        text: \"Volver\",\n        onClickFunction: () => toExercisesPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ExerciseDetailPage, \"Jf5jMPAtfikEAIlrd9NI4yVun4U=\", false, function () {\n  return [useParams, useViewNavigation];\n});\n_c = ExerciseDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ExerciseDetailPage\");","map":{"version":3,"names":["ExerciseCard","ButtonGeneric","TextBanner","UserCard","getExerciseByIdService","useState","useEffect","useContext","useViewNavigation","useParams","AuthContext","ExerciseDetailPage","token","currentUser","idExercise","id","exercise","setExercise","getData","currentExercise","toExercisesPage","toAnonUserPage","undefined","name","description","typology","muscles","picture"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExerciseDetailPage/index.js"],"sourcesContent":["/* VISTA de detalle de exercise recupeardo por :id */\n\nimport \"./index.css\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { UserCard } from \"../../components/UserCard\";\n\nimport { getExerciseByIdService } from \"../../services/exercises\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { useParams } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nexport const ExerciseDetailPage = () => {\n  // recuperar contexto autenticacion\n  const { token, currentUser } = useContext(AuthContext);\n\n  // recuperar del param el id del exercise\n  const { idExercise: id } = useParams();\n\n  // f estado de \"exercise\"; para setear que exercise se muestra\n  const [exercise, setExercise] = useState([]);\n\n  // efecto obtener \"exercise\" del servidor\n  // // funcion: getData; llamar al fetch y actualizar estado de \"exercise\"\n  // // variables de escucha: [id]; cada vez q cambie el exercise\n  useEffect(() => {\n    const getData = async () => {\n      const currentExercise = await getExerciseByIdService({ id, token });\n      setExercise(currentExercise);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre ejercicios\n  const { toExercisesPage, toAnonUserPage } = useViewNavigation();\n\n  // devolver banner, tarjeta del ejercicio y boton de volver; si no existe el ejercicio lanzar alerta y volver a lista de ejercicios\n\n  return !currentUser ? (\n    toAnonUserPage()\n  ) : (\n    <>\n      <UserCard></UserCard>\n      <article className=\"ExerciseDetail\">\n        <TextBanner text={\"Vista de Detalles\"}></TextBanner>\n\n        {!exercise ? toExercisesPage() : undefined}\n\n        <ExerciseCard\n          key={exercise.idExercise}\n          name={exercise.name}\n          description={exercise.description}\n          typology={exercise.typology}\n          muscles={exercise.muscles}\n          picture={exercise.picture}\n          admin={false}\n          likeCounter={\"WIP\"}\n        ></ExerciseCard>\n\n        <ButtonGeneric\n          type=\"button\"\n          text=\"Volver\"\n          onClickFunction={() => toExercisesPage()}\n        ></ButtonGeneric>\n      </article>\n    </>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAO,aAAa;AACpB,SAASA,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,QAAQ,QAAQ,2BAA2B;AAEpD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,WAAW,QAAQ,4BAA4B;AAAC;AAAA;AAEzD,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EACtC;EACA,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC;;EAEtD;EACA,MAAM;IAAEI,UAAU,EAAEC;EAAG,CAAC,GAAGN,SAAS,EAAE;;EAEtC;EACA,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,OAAO,GAAG,YAAY;MAC1B,MAAMC,eAAe,GAAG,MAAMf,sBAAsB,CAAC;QAAEW,EAAE;QAAEH;MAAM,CAAC,CAAC;MACnEK,WAAW,CAACE,eAAe,CAAC;IAC9B,CAAC;IACDD,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEE,eAAe;IAAEC;EAAe,CAAC,GAAGb,iBAAiB,EAAE;;EAE/D;;EAEA,OAAO,CAACK,WAAW,GACjBQ,cAAc,EAAE,gBAEhB;IAAA,wBACE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAY,eACrB;MAAS,SAAS,EAAC,gBAAgB;MAAA,wBACjC,QAAC,UAAU;QAAC,IAAI,EAAE;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAc,EAEnD,CAACL,QAAQ,GAAGI,eAAe,EAAE,GAAGE,SAAS,eAE1C,QAAC,YAAY;QAEX,IAAI,EAAEN,QAAQ,CAACO,IAAK;QACpB,WAAW,EAAEP,QAAQ,CAACQ,WAAY;QAClC,QAAQ,EAAER,QAAQ,CAACS,QAAS;QAC5B,OAAO,EAAET,QAAQ,CAACU,OAAQ;QAC1B,OAAO,EAAEV,QAAQ,CAACW,OAAQ;QAC1B,KAAK,EAAE,KAAM;QACb,WAAW,EAAE;MAAM,GAPdX,QAAQ,CAACF,UAAU;QAAA;QAAA;QAAA;MAAA,QAQV,eAEhB,QAAC,aAAa;QACZ,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,QAAQ;QACb,eAAe,EAAE,MAAMM,eAAe;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBAEb;AACH,CAAC;AAAC,GAvDWT,kBAAkB;EAAA,QAKFF,SAAS,EAiBQD,iBAAiB;AAAA;AAAA,KAtBlDG,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}