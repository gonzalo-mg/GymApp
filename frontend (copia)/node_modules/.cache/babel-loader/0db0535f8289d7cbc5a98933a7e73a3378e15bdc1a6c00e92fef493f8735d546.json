{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/FavExercisesPage/index.js\",\n  _s = $RefreshSig$();\n/* VISTA de listado de favs del currentUser */\n\nimport \"./index.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { getFavExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { UserCard } from \"../../components/UserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FavExercisesPage = () => {\n  _s();\n  // cargar contexto autenticacion\n  const {\n    token,\n    currentUser\n  } = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises q sean fav del server\n      const favs = await getFavExercisesService(token);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre vistas\n  const {\n    toExercisesPage,\n    toExerciseDetailPage,\n    toAnonUserPage\n  } = useViewNavigation();\n\n  // devolver una card por cada exercise del server\n  return !currentUser ? toAnonUserPage() : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"exercisesList\",\n      children: [/*#__PURE__*/_jsxDEV(TextBanner, {\n        text: !exercises ? \"No tienes favoritos\" : \"Estos son tus favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), exercises.map(ex => {\n        return /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          name: ex.name,\n          picture: ex.picture,\n          typology: ex.typology,\n          muscles: ex.muscles,\n          onClickCard: () => toExerciseDetailPage(ex.idExercise)\n        }, ex.idExercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n        type: \"button\",\n        text: \"Volver\",\n        onClickFunction: () => toExercisesPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(FavExercisesPage, \"1C89A2+mUbwtEzRIJ63nXse7OTo=\", false, function () {\n  return [useViewNavigation];\n});\n_c = FavExercisesPage;\nvar _c;\n$RefreshReg$(_c, \"FavExercisesPage\");","map":{"version":3,"names":["useState","useEffect","useContext","useViewNavigation","AuthContext","getFavExercisesService","ExerciseCard","ButtonGeneric","TextBanner","UserCard","FavExercisesPage","token","currentUser","exercises","setExercises","getData","favs","toExercisesPage","toExerciseDetailPage","toAnonUserPage","map","ex","name","picture","typology","muscles","idExercise"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/FavExercisesPage/index.js"],"sourcesContent":["/* VISTA de listado de favs del currentUser */\n\nimport \"./index.css\";\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nimport { getFavExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport {UserCard} from \"../../components/UserCard\"\n\nexport const FavExercisesPage = () => {\n  // cargar contexto autenticacion\n  const {token, currentUser} = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises q sean fav del server\n      const favs = await getFavExercisesService(token);\n    };\n    getData();\n  }, []);\n\n  // invocar hook de navegacion entre vistas\n  const { toExercisesPage, toExerciseDetailPage, toAnonUserPage } = useViewNavigation();\n\n  // devolver una card por cada exercise del server\n  return  !currentUser ? toAnonUserPage() : (\n    <>\n    <UserCard></UserCard>\n    <article className=\"exercisesList\">\n      <TextBanner text={!exercises ? \"No tienes favoritos\":\"Estos son tus favoritos\"}></TextBanner>\n\n      {exercises.map((ex) => {\n        return (\n          <ExerciseCard\n            key={ex.idExercise}\n            name={ex.name}\n            picture={ex.picture}\n            typology={ex.typology}\n            muscles={ex.muscles}\n            onClickCard={() => toExerciseDetailPage(ex.idExercise)}\n          ></ExerciseCard>\n        );\n      })}\n      <ButtonGeneric\n        type=\"button\"\n        text=\"Volver\"\n        onClickFunction={() => toExercisesPage()}\n      ></ButtonGeneric>\n    </article>\n    </>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAO,aAAa;AAEpB,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,WAAW,QAAQ,4BAA4B;AAExD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAAQC,QAAQ,QAAO,2BAA2B;AAAA;AAAA;AAElD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EACpC;EACA,MAAM;IAACC,KAAK;IAAEC;EAAW,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;;EAEpD;EACA,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAG,YAAY;MAC1B;MACA,MAAMC,IAAI,GAAG,MAAMX,sBAAsB,CAACM,KAAK,CAAC;IAClD,CAAC;IACDI,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEE,eAAe;IAAEC,oBAAoB;IAAEC;EAAe,CAAC,GAAGhB,iBAAiB,EAAE;;EAErF;EACA,OAAQ,CAACS,WAAW,GAAGO,cAAc,EAAE,gBACrC;IAAA,wBACA,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAY,eACrB;MAAS,SAAS,EAAC,eAAe;MAAA,wBAChC,QAAC,UAAU;QAAC,IAAI,EAAE,CAACN,SAAS,GAAG,qBAAqB,GAAC;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAc,EAE5FA,SAAS,CAACO,GAAG,CAAEC,EAAE,IAAK;QACrB,oBACE,QAAC,YAAY;UAEX,IAAI,EAAEA,EAAE,CAACC,IAAK;UACd,OAAO,EAAED,EAAE,CAACE,OAAQ;UACpB,QAAQ,EAAEF,EAAE,CAACG,QAAS;UACtB,OAAO,EAAEH,EAAE,CAACI,OAAQ;UACpB,WAAW,EAAE,MAAMP,oBAAoB,CAACG,EAAE,CAACK,UAAU;QAAE,GALlDL,EAAE,CAACK,UAAU;UAAA;UAAA;UAAA;QAAA,QAMJ;MAEpB,CAAC,CAAC,eACF,QAAC,aAAa;QACZ,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,QAAQ;QACb,eAAe,EAAE,MAAMT,eAAe;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBAEX;AACH,CAAC;AAAC,GAhDWP,gBAAgB;EAAA,QAmBuCP,iBAAiB;AAAA;AAAA,KAnBxEO,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}