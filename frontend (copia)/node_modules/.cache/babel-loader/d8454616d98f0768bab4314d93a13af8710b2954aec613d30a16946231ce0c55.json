{"ast":null,"code":"var _jsxFileName = \"/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExercisesPage/index.js\",\n  _s = $RefreshSig$();\n/* VISTA de listado completo de ejercicios */\n\nimport \"./index.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { getExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { UserCard } from \"../../components/UserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ExercisesPage = () => {\n  _s();\n  // cargar contexto autenticacion\n  const {\n    token,\n    currentUser\n  } = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // f estado de \"exercises\"; para setear los filtros a usar para mostrar exercises\n  const [filter, setFilter] = useState(\"\");\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises del server\n      const recoveredExercises = await getExercisesService(token);\n\n      // f para filtrar exercises; devolver cq exercise q contenga (en su nombre/tipologia/musculo) lo escrito por el usuario en el formulario\n      function myFiltering(ex, filter) {\n        if (ex.name.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.typology.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.muscles.toLowerCase().includes(filter)) {\n          return ex;\n        }\n      }\n\n      // aplicar filtrado\n      const filteredExercises = recoveredExercises.filter(ex => myFiltering(ex, filter));\n\n      // setear exercises al resultado del filtro\n      setExercises(filteredExercises);\n    };\n    getData();\n  }, [filter]);\n\n  // invocar hook de navegacion entre vistas\n  const {\n    toExercisesPage,\n    toExerciseDetailPage,\n    toAnonUserPage\n  } = useViewNavigation();\n\n  // devolver una card por cada exercise del server\n  return !currentUser ? toAnonUserPage() : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"exercisesList\",\n      children: [/*#__PURE__*/_jsxDEV(TextBanner, {\n        text: filter === \"\" ? \"Estás viendo todos los ejercicios disponibles\" : \"Estás viendo los resultados del filtrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"filters\",\n        onSubmit: e => {\n          e.preventDefault();\n          //console.log(`form submit sets filtersURL to: ${filter}`);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"filterName\",\n              name: \"name\",\n              placeholder: \"Busca por nombre, tipolog\\xEDa o m\\xFAsculo\",\n              value: filter,\n              onChange: e => setFilter(e.target.value.toLowerCase())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), filter === \"\" ? null : /*#__PURE__*/_jsxDEV(ButtonGeneric, {\n          type: \"button\",\n          text: \"Borrar filtro\",\n          onClickFunction: () => setFilter(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), exercises.map(ex => {\n        return /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          idExercise: ex.idExercise,\n          name: ex.name,\n          picture: ex.picture,\n          typology: ex.typology,\n          muscles: ex.muscles,\n          onClickCard: () => toExerciseDetailPage(ex.idExercise)\n        }, ex.idExercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ExercisesPage, \"UVY/6q0XxTrOBNokr4WiXfy5O5c=\", false, function () {\n  return [useViewNavigation];\n});\n_c = ExercisesPage;\nvar _c;\n$RefreshReg$(_c, \"ExercisesPage\");","map":{"version":3,"names":["useState","useEffect","useContext","useViewNavigation","AuthContext","getExercisesService","ExerciseCard","ButtonGeneric","TextBanner","UserCard","ExercisesPage","token","currentUser","exercises","setExercises","filter","setFilter","getData","recoveredExercises","myFiltering","ex","name","toLowerCase","includes","typology","muscles","filteredExercises","toExercisesPage","toExerciseDetailPage","toAnonUserPage","e","preventDefault","target","value","map","idExercise","picture"],"sources":["/home/gonzalo/estudios/HAB-bootcamp/proyectos/proyecto-03-mi-borrador/frontend/src/views/ExercisesPage/index.js"],"sourcesContent":["/* VISTA de listado completo de ejercicios */\n\nimport \"./index.css\";\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useViewNavigation } from \"../../hooks/useViewNavigation\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nimport { getExercisesService } from \"../../services/exercises\";\nimport { ExerciseCard } from \"../../components/ExerciseCard\";\nimport { ButtonGeneric } from \"../../components/ButtonGeneric\";\nimport { TextBanner } from \"../../components/TextBanner\";\nimport { UserCard } from \"../../components/UserCard\";\n\nexport const ExercisesPage = () => {\n  // cargar contexto autenticacion\n  const { token, currentUser } = useContext(AuthContext);\n\n  // f estado de \"exercises\"; para setear los exercises recuperados y a mostrar\n  const [exercises, setExercises] = useState([]);\n\n  // f estado de \"exercises\"; para setear los filtros a usar para mostrar exercises\n  const [filter, setFilter] = useState(\"\");\n\n  // efecto obtener \"exercises\" del servidor\n  // // funcion: getData; llamar al server y actualizar estado de \"exercises\"; al estar dentro de useEffect hay q hacerlo con un callback por sen asincrono\n  // // variables de escucha: []; cada vez q se arrance el elemento\n  useEffect(() => {\n    const getData = async () => {\n      // recuperar exercises del server\n      const recoveredExercises = await getExercisesService(token);\n\n      // f para filtrar exercises; devolver cq exercise q contenga (en su nombre/tipologia/musculo) lo escrito por el usuario en el formulario\n      function myFiltering(ex, filter) {\n        if (ex.name.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.typology.toLowerCase().includes(filter)) {\n          return ex;\n        }\n        if (ex.muscles.toLowerCase().includes(filter)) {\n          return ex;\n        }\n      }\n\n      // aplicar filtrado\n      const filteredExercises = recoveredExercises.filter((ex) =>\n        myFiltering(ex, filter)\n      );\n\n      // setear exercises al resultado del filtro\n      setExercises(filteredExercises);\n    };\n    getData();\n  }, [filter]);\n\n  // invocar hook de navegacion entre vistas\n  const { toExercisesPage, toExerciseDetailPage, toAnonUserPage } =\n    useViewNavigation();\n\n  // devolver una card por cada exercise del server\n  return !currentUser ? (\n    toAnonUserPage()\n  ) : (\n    <>\n      <UserCard></UserCard>\n      <article className=\"exercisesList\">\n        <TextBanner\n          text={\n            filter === \"\"\n              ? \"Estás viendo todos los ejercicios disponibles\"\n              : \"Estás viendo los resultados del filtrado\"\n          }\n        ></TextBanner>\n\n        <form\n          id=\"filters\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            //console.log(`form submit sets filtersURL to: ${filter}`);\n          }}\n        >\n          <ul>\n            <li>\n              <input\n                id=\"filterName\"\n                name=\"name\"\n                placeholder=\"Busca por nombre, tipología o músculo\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value.toLowerCase())}\n              ></input>\n            </li>\n          </ul>\n\n          {filter === \"\" ? null : (\n            <ButtonGeneric\n              type=\"button\"\n              text=\"Borrar filtro\"\n              onClickFunction={() => setFilter(\"\")}\n            ></ButtonGeneric>\n          )}\n        </form>\n\n        {exercises.map((ex) => {\n          return (\n            <ExerciseCard\n              key={ex.idExercise}\n              idExercise={ex.idExercise}\n              name={ex.name}\n              picture={ex.picture}\n              typology={ex.typology}\n              muscles={ex.muscles}\n              onClickCard={() => toExerciseDetailPage(ex.idExercise)}\n            ></ExerciseCard>\n          );\n        })}\n      </article>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}